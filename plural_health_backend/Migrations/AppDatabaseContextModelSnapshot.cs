// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using plural_health_backend.Data;

#nullable disable

namespace plural_health_backend.Migrations
{
    [DbContext(typeof(AppDatabaseContext))]
    partial class AppDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("plural_health_backend.Models.Appointment", b =>
                {
                    b.Property<Guid>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateOnly>("AppointmentDate")
                        .HasColumnType("date");

                    b.Property<string>("AppointmentType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ClinicId")
                        .HasColumnType("char(36)");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time(6)");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("ShouldRepeat")
                        .HasColumnType("tinyint(1)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AppointmentId");

                    b.HasIndex("ClinicId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("plural_health_backend.Models.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("plural_health_backend.Models.Clinic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ClinicName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Clinics");

                    b.HasData(
                        new
                        {
                            Id = new Guid("459c24ab-3ac6-4782-9360-a0ce7cb85376"),
                            ClinicName = "Accident and Emergency",
                            CreatedAt = new DateTime(2025, 9, 29, 4, 52, 52, 794, DateTimeKind.Utc).AddTicks(7122),
                            UpdatedAt = new DateTime(2025, 9, 29, 4, 52, 52, 794, DateTimeKind.Utc).AddTicks(7650)
                        },
                        new
                        {
                            Id = new Guid("fbb47023-62dd-440d-8a07-91615fbb9927"),
                            ClinicName = "Neurology",
                            CreatedAt = new DateTime(2025, 9, 29, 4, 52, 52, 794, DateTimeKind.Utc).AddTicks(8194),
                            UpdatedAt = new DateTime(2025, 9, 29, 4, 52, 52, 794, DateTimeKind.Utc).AddTicks(8195)
                        },
                        new
                        {
                            Id = new Guid("6a885e00-e948-4a85-8eb3-7e7fcdd82946"),
                            ClinicName = "Cardiology",
                            CreatedAt = new DateTime(2025, 9, 29, 4, 52, 52, 794, DateTimeKind.Utc).AddTicks(8217),
                            UpdatedAt = new DateTime(2025, 9, 29, 4, 52, 52, 794, DateTimeKind.Utc).AddTicks(8217)
                        },
                        new
                        {
                            Id = new Guid("fa31e486-ee6d-4b8c-b10b-d8b32b1e5e21"),
                            ClinicName = "Gastroenterology",
                            CreatedAt = new DateTime(2025, 9, 29, 4, 52, 52, 794, DateTimeKind.Utc).AddTicks(8238),
                            UpdatedAt = new DateTime(2025, 9, 29, 4, 52, 52, 794, DateTimeKind.Utc).AddTicks(8238)
                        },
                        new
                        {
                            Id = new Guid("5b199233-16f3-477f-9cab-3474bfab608d"),
                            ClinicName = "Renal",
                            CreatedAt = new DateTime(2025, 9, 29, 4, 52, 52, 794, DateTimeKind.Utc).AddTicks(8258),
                            UpdatedAt = new DateTime(2025, 9, 29, 4, 52, 52, 794, DateTimeKind.Utc).AddTicks(8259)
                        });
                });

            modelBuilder.Entity("plural_health_backend.Models.Insurance", b =>
                {
                    b.Property<Guid>("InsuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Insurer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InusurancePlan")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("InsuranceId");

                    b.HasIndex("PatientId")
                        .IsUnique();

                    b.ToTable("Insurances");
                });

            modelBuilder.Entity("plural_health_backend.Models.Patient", b =>
                {
                    b.Property<Guid>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("HasInsurance")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PatientUid")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StateOfOrigin")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("plural_health_backend.Models.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PatientId")
                        .IsUnique();

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("plural_health_backend.Models.Appointment", b =>
                {
                    b.HasOne("plural_health_backend.Models.Clinic", "Clinic")
                        .WithMany()
                        .HasForeignKey("ClinicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("plural_health_backend.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinic");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("plural_health_backend.Models.Insurance", b =>
                {
                    b.HasOne("plural_health_backend.Models.Patient", "Patient")
                        .WithOne("Insurance")
                        .HasForeignKey("plural_health_backend.Models.Insurance", "PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("plural_health_backend.Models.Wallet", b =>
                {
                    b.HasOne("plural_health_backend.Models.Patient", "Patient")
                        .WithOne("Wallet")
                        .HasForeignKey("plural_health_backend.Models.Wallet", "PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("plural_health_backend.Models.Patient", b =>
                {
                    b.Navigation("Insurance");

                    b.Navigation("Wallet")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
